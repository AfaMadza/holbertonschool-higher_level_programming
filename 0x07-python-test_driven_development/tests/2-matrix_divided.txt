==============================
2-matrix_divided.py
==============================

The matrix_divided functions divides the elements of
a matrix by an integer

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]


Simple Division
===============

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided(matrix, 1.5)
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

>>> matrix_divided(matrix, 10000)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Negative Numbers

>>> matrix_divided(matrix, -1)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]


>>> matrix = [[1, 2.2, 3], [4, 5.5, 6]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.73, 1.0], [1.33, 1.83, 2.0]]

Errors
======

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, "foo")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, (1, 'm', 3))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2], [4, 5, 6]]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
